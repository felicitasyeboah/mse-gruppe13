# Einfache CI Pipeline 

name: CI Pipeline

# Wann soll die CI - Pipeline ausgeführt werden?
on:
  # Der Workflow wird bei jedem Push oder Pull Request ausgeführt (nur der main-Branch)
  push:
    branches: [ "main", "felicitas" ]
  pull_request:
    branches: [ "main", "dev" ]

  # Workflow kann auch manuell in "Actions" aufgerufen werden
  workflow_dispatch:

jobs:
  # Dieser workflow enthält die jobs "build" und "test"
  build-and-test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_DATABASE: testdb
          MYSQL_USER: testuser
          MYSQL_PASSWORD: testpassword
          MYSQL_ROOT_PASSWORD: rootpassword
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    steps:
      # 1. Checke den Code aus dem Repository aus
      - name: Checkout source code
        uses: actions/checkout@v4.2.2

      # 2. Rufe die passende Version von JDK auf
      - name: Set up JDK
        uses: actions/setup-java@v4.5.0
        with:
          distribution: 'corretto'
          java-version: '17'

      # start docker
      - name: Start Docker Compose
        run: docker-compose up -d

      # 3. Installiere die Projektabhängigkeiten
      - name: Install dependencies and build project
        run: mvn clean install

      # 4. Führe automatisierte Tests aus
      - name: Run tests
        run: mvn test

      # 5. Tear down MySQL
      - name: Tear down MySQL
        run: |
          docker-compose down


