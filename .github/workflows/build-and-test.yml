# Einfache CI Pipeline 

name: CI Pipeline

# Wann soll die CI - Pipeline ausgeführt werden?
on:
  # Der Workflow wird bei jedem Push oder Pull Request ausgeführt (nur der main-Branch)
  push:
    branches: [ "main", "felicitas", "dev" ]
  pull_request:
    branches: [ "main" ]

  # Workflow kann auch manuell in "Actions" aufgerufen werden
  workflow_dispatch:

jobs:
  # Dieser workflow enthält die jobs "build" und "test"
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # 1. Checke den Code aus dem Repository aus
      - name: Checkout source code
        uses: actions/checkout@v4.2.2

      # 2. Rufe die passende Version von JDK auf
      - name: Set up JDK
        uses: actions/setup-java@v4.5.0
        with:
          distribution: 'corretto'
          java-version: '17'
      # 3. Install Docker Compose
      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.24.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      # 4. Start Docker Compose
      - name: Start Docker Compose
        run: docker-compose up -d

      # 5. Wait for MySQL to be Ready
      - name: Wait for MySQL
        run: |
          for i in {1..10}; do
          docker exec mysqldb mysqladmin ping -h localhost --silent && break
          echo "Waiting for MySQL..."
          sleep 5
          done

      # 6. Installiere die Projektabhängigkeiten
      - name: Install dependencies and build project
        run: mvn clean install

      # 7 Führe automatisierte Tests aus
      - name: Run tests
        run: mvn test

      # 8. Tear down MySQL
      - name: Tear down MySQL
        run: |
          docker-compose down -v


