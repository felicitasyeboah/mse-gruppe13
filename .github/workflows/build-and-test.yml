name: CI Pipeline

on:
  # Trigger the workflow on pushes to specific branches
  push:
    branches: [ "christine", "felicitas", "roxane", "katrin" ]
  # Trigger the workflow on pull requests targeting the main branch
  pull_request:
    branches: [ "main" ]
  # Allow manual triggering of the workflow
  workflow_dispatch:

jobs:
  build-test-analyze:
    # Specify the environment for the workflow runner
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the source code
      # Retrieve the repository code to the runner
      - name: Checkout source code
        uses: actions/checkout@v4.2.2

      # Step 2: Set up Java Development Kit (JDK)
      # Install and configure Amazon Corretto JDK version 17 for building and testing
      - name: Set up JDK
        uses: actions/setup-java@v4.5.0
        with:
          distribution: 'corretto'  # Use Amazon Corretto distribution
          java-version: '17'       # Specify Java version 17

      # Step 3: Install Docker Compose
      # Download and install Docker Compose to manage containerized services
      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.24.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version  # Verify installation

      # Step 4: Start Docker Compose services
      # Start services defined in the Docker Compose configuration file
      - name: Start Docker Compose
        run: docker-compose up -d

      # Step 5: Wait for MySQL to become available
      # Continuously check MySQL container readiness; retry up to 10 times
      - name: Wait for MySQL
        run: |
          for i in {1..10}; do
          docker exec mysqldb mysqladmin ping -h localhost --silent && break
          echo "Waiting for MySQL..."
          sleep 5
          done

      # Step 6: Validate code formatting using Google Style
      # Ensure all code follows the specified formatting rules
      - name: Validate Code Format
        run: mvn fmt:check

      # Step 7: Build, test, and analyze the codebase
      # Use Maven to clean, compile, test, and analyze code coverage
      - name: Build, Test, and Analyze
        run: mvn clean verify

      # Step 8: Tear down Docker services
      # Stop and remove Docker containers and volumes to clean up resources
      - name: Tear down Docker Services
        run: |
          docker-compose down -v
